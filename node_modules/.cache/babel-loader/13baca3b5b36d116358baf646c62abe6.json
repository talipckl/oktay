{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AHRAS\\\\Downloads\\\\Movies-react\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport Searchbar from \"./components/Searchbar\";\nimport Movielist from \"./components/Movielist\";\nimport axios from \"axios\";\nimport Addmovie from \"./components/Addmovie\";\nimport resim from \"./components/film.jpg\";\nimport About from \"./components/About\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Edit from \"./components/Edit\";\nimport Nav from \"./components/Nav\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      movies: [],\n      searchQuery: \"\"\n    };\n\n    this.deleteMovie = async movie => {\n      axios.delete(`http://localhost:3002/movies/${movie.id}`);\n      const newMovieList = this.state.movies.filter(m => m.id !== movie.id);\n      this.setState(state => ({\n        movies: newMovieList\n      }));\n      this.getMovies();\n    };\n\n    this.searchMovie = event => {\n      this.setState({\n        searchQuery: event.target.value\n      });\n    };\n\n    this.Addmovie = async movie => {\n      await axios.post(`http://localhost:3002/movies/`, movie);\n      this.setState(state => ({\n        movies: state.movies.concat([movie])\n      }));\n      this.getMovies();\n    };\n\n    this.editMovie = async (id, updateMovie) => {\n      await axios.put(`http://localhost:3002/movies/${id}`, updateMovie);\n      this.getMovies();\n    };\n  }\n\n  componentDidMount() {\n    this.getMovies();\n  } //---------------\n\n\n  async getMovies() {\n    const response = await axios.get(\"http://localhost:3002/movies\");\n    this.setState({\n      movies: response.data\n    });\n  }\n\n  render() {\n    //filtreleme fonskiyonu\n    let filteredMovies = this.state.movies.filter(movie => {\n      return movie.name.toLowerCase().indexOf(this.state.searchQuery.toLowerCase()) !== -1;\n    }).sort((a, b) => {\n      return a.id < b.id ? 1 : -1; // id seçimin tersine döndürür\n    });\n    return /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Switch, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/about\",\n            children: /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/add\",\n            exact: true,\n            render: _ref => {\n              let {\n                history\n              } = _ref;\n              return /*#__PURE__*/_jsxDEV(Addmovie, {\n                onAddMovie: movie => {\n                  this.Addmovie(movie);\n                  history.push(\"/\");\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 17\n              }, this);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/edit/:id\",\n            render: props => /*#__PURE__*/_jsxDEV(Edit, { ...props,\n              onEditMovie: (id, movie) => {\n                this.editMovie(id, movie);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            render: () => /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"container-fluid\",\n                  style: {\n                    backgroundImage: `url(${resim})`,\n                    width: \"100%\",\n                    height: \"35rem\",\n                    \"background-repeat\": \"no-repeat\",\n                    \"margin-bottom\": \"2rem\",\n                    opacity: \"0.7\"\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-12 \",\n                    style: {\n                      display: \"flex\",\n                      justifyContent: \"center\",\n                      alignItems: \"center\",\n                      paddingTop: \"210px\"\n                    },\n                    children: /*#__PURE__*/_jsxDEV(Searchbar, {\n                      searchMovieProp: this.searchMovie\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 130,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 121,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 110,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Movielist, {\n                movies: filteredMovies,\n                deleteITem: this.deleteMovie\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/AHRAS/Downloads/Movies-react/src/App.js"],"names":["React","Component","Searchbar","Movielist","axios","Addmovie","resim","About","BrowserRouter","Router","Switch","Route","Edit","Nav","App","state","movies","searchQuery","deleteMovie","movie","delete","id","newMovieList","filter","m","setState","getMovies","searchMovie","event","target","value","post","concat","editMovie","updateMovie","put","componentDidMount","response","get","data","render","filteredMovies","name","toLowerCase","indexOf","sort","a","b","history","push","props","backgroundImage","width","height","opacity","display","justifyContent","alignItems","paddingTop"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Searchbar from \"./components/Searchbar\";\nimport Movielist from \"./components/Movielist\";\nimport axios from \"axios\";\nimport Addmovie from \"./components/Addmovie\";\nimport resim from \"./components/film.jpg\";\nimport About from \"./components/About\";\n\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Edit from \"./components/Edit\";\nimport Nav from \"./components/Nav\";\n\nclass App extends Component {\n  state = {\n    movies: [],\n    searchQuery: \"\",\n  };\n\n  componentDidMount() {\n    this.getMovies();\n  }\n  //---------------\n  async getMovies() {\n    const response = await axios.get(\"http://localhost:3002/movies\");\n\n    this.setState({ movies: response.data });\n  }\n\n  deleteMovie = async (movie) => {\n    axios.delete(`http://localhost:3002/movies/${movie.id}`);\n    const newMovieList = this.state.movies.filter((m) => m.id !== movie.id);\n    this.setState((state) => ({\n      movies: newMovieList,\n    }));\n    this.getMovies();\n  };\n\n  // filtreleme\n  searchMovie = (event) => {\n    this.setState({ searchQuery: event.target.value });\n  };\n\n  //ekleme\n  Addmovie = async (movie) => {\n    await axios.post(`http://localhost:3002/movies/`, movie);\n\n    this.setState((state) => ({\n      movies: state.movies.concat([movie]),\n    }));\n    this.getMovies();\n  };\n\n  //güncelleme\n  editMovie = async (id, updateMovie) => {\n    await axios.put(`http://localhost:3002/movies/${id}`, updateMovie);\n    this.getMovies();\n  };\n  render() {\n    //filtreleme fonskiyonu\n    let filteredMovies = this.state.movies\n      .filter((movie) => {\n        return (\n          movie.name\n            .toLowerCase()\n            .indexOf(this.state.searchQuery.toLowerCase()) !== -1\n        );\n      })\n      .sort((a, b) => {\n        return a.id < b.id ? 1 : -1; // id seçimin tersine döndürür\n      });\n\n    return (\n      <Router>\n        <div className=\"container\">\n          <Nav />\n          <Switch>\n            <Route exact path=\"/about\">\n              <About />\n            </Route>\n            <Route\n              path=\"/add\"\n              exact\n              render={({ history }) => (\n                <Addmovie\n                  onAddMovie={(movie) => {\n                    this.Addmovie(movie);\n                    history.push(\"/\");\n                  }}\n                />\n              )}\n            />\n\n            <Route\n              path=\"/edit/:id\"\n              render={(props) => (\n                <Edit\n                  {...props}\n                  onEditMovie={(id, movie) => {\n                    this.editMovie(id, movie);\n                  }}\n                />\n              )}\n            />\n\n            <Route\n              path=\"/\"\n              render={() => (\n                <React.Fragment>\n                  <div className=\"row\">\n                    <div\n                      className=\"container-fluid\"\n                      style={{\n                        backgroundImage: `url(${resim})`,\n                        width: \"100%\",\n                        height: \"35rem\",\n                        \"background-repeat\": \"no-repeat\",\n                        \"margin-bottom\": \"2rem\",\n                        opacity: \"0.7\",\n                      }}\n                    >\n                      <div\n                        className=\"col-12 \"\n                        style={{\n                          display: \"flex\",\n                          justifyContent: \"center\",\n                          alignItems: \"center\",\n                          paddingTop: \"210px\",\n                        }}\n                      >\n                        <Searchbar searchMovieProp={this.searchMovie} />\n                      </div>\n                    </div>\n                  </div>\n\n                  <Movielist\n                    movies={filteredMovies}\n                    deleteITem={this.deleteMovie}\n                  />\n                </React.Fragment>\n              )}\n            />\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}